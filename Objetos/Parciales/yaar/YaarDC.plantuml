@startuml DCYaar

class Mision{
    
    method puedeSerRealizadaPor(unBarco)
    {abstract} method esUtil(unTripulante)
}

class BusquedaDelTesoro extends Mision{

    method esUtil(unTripulante)
    method puedeSerRealizadaPor(unBarco)
}

class ConvertirseEnLeyenda extends Mision{

    const itemLegendario
    method esUtil(unTripulante)
}

class Saqueo extends Mision{

    const victima
    var monedas

    method monedas(unaCantidad)
    method esUtil(unTripulante)
    method puedeSerRealizadaPor(unBarco)
}

class Barco{
    var mision
    var tripulantes
    const capacidad
    --
    method elMasAdineradoDe(unosTripulantes)
    method cantidadDeTripulantes()
    method puedeFormarParte(unTripulante)
    method reclutar(unTripulante)
    method tieneSuficienteTripulacion() 
    method sirveParaLaMision(unTripulante) 
    method puedeRealizar(unaMision)
    method tieneEspacio() 
    method mision(unaMision)
    method puedeAbrirUnCofre()
    method esVulnerableA(otroBarco) 
    method puedeSerSaqueadaPor(unTripulante) 
    method losBorrachos() 
    method estanTodosBorrachos() 
    method elMasEbrio()
    method anclarEn(unaCiudad)
    method esTemible()
    method cantidadDeBorrachos() 
    method items()
    method elBorrachoMasAdinerado() 
}

class CiudadCostera{

    var habitantes

    method puedeSerSaqueadaPor(unTripulante)
    method esVulnerableA(unBarco)
    method aumentarHabitantes(unNumero)
}

class Pirata{
    const items
    var nivelDeEbriedad
    var dinero
    const quienLoInvito
    
    method items() 
    method dinero()
    method nivelDeEbriedad()
    method estaPreparadoParaBuscar()
    method tieneMenosMonedasQue(unaCantidad)
    method esUtilPara(unaMision)
    method puedeFormarParteDe(unBarco)
    method contiene(unItem)
    method tieneMuchosItems()
    method estaPasadoDeGrogXD(unNumero)
    method aumentarEbriedad(unNumero)
    method disminuirDinero(unNumero)
    method seAnimaASaquearA(unaVictima)
}

class EspiaDeLaCorona extends Pirata{

    method estaPasadoDeGrogXD(unNumero)
    method seAnimaASaquearA(unaVictima)
}

interface Victima{
    method puedeSerSaqueadaPor(unTripulante)
}

Barco --> "*" Pirata : tripulantes
Barco --> Mision
Barco ..|> Victima
CiudadCostera ..|> Victima
Saqueo --> Victima